#! /usr/bin/env node

var exec = require('child_process').exec;
var fs = require('fs');
var path = require('path');
var os = require('os');
var Utils = require('total.js/utils');
var Internal = require('total.js/internal');

var EOF = os.platform() === 'win32' ? '\r\n' : '\n';
var $type = 1;
var isDirectory = false;

// $type == 1 - normal
// $type == 2 - minimal
// $type == 3 - angular

function createDirectory(directory) {
    var arr = [];

    arr.push('controllers');
    arr.push('node_modules');

    if ($type < 2) {
        arr.push('views');
        arr.push('definitions');
        arr.push('public');
    }

    arr.forEach(function(o) {
        var dir = path.join(directory, o);
        if (!fs.existsSync(dir))
            fs.mkdirSync(dir);
    });
}

function createDirectoryAngular(directory) {
    var arr = [];

    arr.push('app');
    arr.push('controllers');
    arr.push('definitions');
    arr.push('node_modules');
    arr.push('views');

    arr.forEach(function(o) {
        var dir = path.join(directory, o);
        if (!fs.existsSync(dir))
            fs.mkdirSync(dir);
    });

    arr = [];
    arr.push('common');
    arr.push('controllers');
    arr.push('css');
    arr.push('directives');
    arr.push('filters');
    arr.push('resources');
    arr.push('services');
    arr.push('templates');
    arr.push('views');

    arr.forEach(function(o) {
        var dir = path.join(directory, 'app', o);
        if (!fs.existsSync(dir))
            fs.mkdirSync(dir);
    });
}

function createFiles(directory) {

    createFileIndex(directory);
    createFileConfig(directory);

    if ($type < 2) {
        createFileViews(directory);
        createFilePublic(directory);
    }

    if ($type === 3) {
        // createFileResource(directory);
        createFileViews(directory);
        createFilePublicAngular(directory);
        createFileControllerAngular(directory);
    } else
        createFileController(directory);

    if ($type === 0) {
        createFileTest(directory);
        createFileModules(directory);
    }
}

function createFileIndex(directory) {
    fs.writeFileSync(path.join(directory, 'debug.js'), 'Ly8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQovLyBJTVBPUlRBTlQ6IG9ubHkgZm9yIGRldmVsb3BtZW50DQovLyB0b3RhbC5qcyAtIHdlYiBhcHBsaWNhdGlvbiBmcmFtZXdvcmsgZm9yIG5vZGUuanMNCi8vIGh0dHA6Ly93d3cudG90YWxqcy5jb20NCi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQ0KDQp2YXIgZnMgPSByZXF1aXJlKCdmcycpOw0KdmFyIG9wdGlvbnMgPSB7fTsNCg0KLy8gb3B0aW9ucy5pcCA9ICcxMjcuMC4wLjEnOw0KLy8gb3B0aW9ucy5wb3J0ID0gcGFyc2VJbnQocHJvY2Vzcy5hcmd2WzJdKTsNCi8vIG9wdGlvbnMuY29uZmlnID0geyBuYW1lOiAndG90YWwuanMnIH07DQovLyBvcHRpb25zLmh0dHBzID0geyBrZXk6IGZzLnJlYWRGaWxlU3luYygna2V5cy9hZ2VudDIta2V5LnBlbScpLCBjZXJ0OiBmcy5yZWFkRmlsZVN5bmMoJ2tleXMvYWdlbnQyLWNlcnQucGVtJyl9Ow0KLy8gb3B0aW9ucy5zbGVlcCA9IDMwMDA7DQoNCnZhciBpc0RlYnVnZ2luZz1wcm9jZXNzLmFyZ3YuaW5kZXhPZigiZGVidWdnaW5nIikhPT0tMTt2YXIgZGlyZWN0b3J5PXByb2Nlc3MuY3dkKCk7dmFyIHBhdGg9cmVxdWlyZSgicGF0aCIpO3ZhciBmaXJzdD1wcm9jZXNzLmFyZ3YuaW5kZXhPZigicmVzdGFydCIpPT09LTE7cHJvY2Vzcy5vbigidW5jYXVnaHRFeGNlcHRpb24iLGZ1bmN0aW9uKGUpe2lmKGUudG9TdHJpbmcoKS5pbmRleE9mKCJFU1JDSCIpIT09LTEpcmV0dXJuO2NvbnNvbGUubG9nKGUpfSk7ZnVuY3Rpb24gZGVidWcoKXt2YXIgZnJhbWV3b3JrPXJlcXVpcmUoInRvdGFsLmpzIik7dmFyIHBvcnQ9cGFyc2VJbnQocHJvY2Vzcy5hcmd2W3Byb2Nlc3MuYXJndi5sZW5ndGgtMV0pO2lmKCFpc05hTihwb3J0KSl7aWYoIW9wdGlvbnMpb3B0aW9ucz17fTtvcHRpb25zLnBvcnQ9cG9ydH1pZihwb3J0PjAmJiFvcHRpb25zLnBvcnQpb3B0aW9ucy5wb3J0PXBvcnR8fDhlMztpZihvcHRpb25zLmh0dHBzKXJldHVybiBmcmFtZXdvcmsuaHR0cHMoImRlYnVnIixvcHRpb25zKTtmcmFtZXdvcmsuaHR0cCgiZGVidWciLG9wdGlvbnMpO2lmKGZpcnN0KWZyYW1ld29yay5lbWl0KCJkZWJ1Zy1zdGFydCIpO2Vsc2UgZnJhbWV3b3JrLmVtaXQoImRlYnVnLXJlc3RhcnQiKX1mdW5jdGlvbiBhcHAoKXt2YXIgZm9yaz1yZXF1aXJlKCJjaGlsZF9wcm9jZXNzIikuZm9yazt2YXIgdXRpbHM9cmVxdWlyZSgidG90YWwuanMvdXRpbHMiKTt2YXIgZGlyZWN0b3JpZXM9W2RpcmVjdG9yeSsiL2NvbnRyb2xsZXJzIixkaXJlY3RvcnkrIi9kZWZpbml0aW9ucyIsZGlyZWN0b3J5KyIvaXNvbW9ycGhpYyIsZGlyZWN0b3J5KyIvbW9kdWxlcyIsZGlyZWN0b3J5KyIvcmVzb3VyY2VzIixkaXJlY3RvcnkrIi9tb2RlbHMiLGRpcmVjdG9yeSsiL3NvdXJjZSIsZGlyZWN0b3J5KyIvd29ya2VycyJdO3ZhciBmaWxlcz17fTt2YXIgZm9yY2U9ZmFsc2U7dmFyIGNoYW5nZXM9W107dmFyIGFwcD1udWxsO3ZhciBzdGF0dXM9MDt2YXIgYXN5bmM9bmV3IHV0aWxzLkFzeW5jO3ZhciBwaWQ9IiI7dmFyIHBpZEludGVydmFsPW51bGw7dmFyIHByZWZpeD0iLS0tLS0tLS0tLS0tPiAiO3ZhciBpc0xvYWRlZD1mYWxzZTt2YXIgaXNTa2lwPWZhbHNlO2Z1bmN0aW9uIG9uRmlsdGVyKHBhdGgsaXNEaXJlY3Rvcnkpe3JldHVybiBpc0RpcmVjdG9yeT90cnVlOnBhdGguaW5kZXhPZigiLmpzIikhPT0tMXx8cGF0aC5pbmRleE9mKCIucmVzb3VyY2UiKSE9PS0xfWZ1bmN0aW9uIG9uQ29tcGxldGUoKXt2YXIgc2VsZj10aGlzO2ZzLnJlYWRkaXIoZGlyZWN0b3J5LGZ1bmN0aW9uKGVycixhcnIpe3ZhciBsZW5ndGg9YXJyLmxlbmd0aDtmb3IodmFyIGk9MDtpPGxlbmd0aDtpKyspe3ZhciBuYW1lPWFycltpXTtpZihuYW1lPT09ImNvbmZpZyJ8fG5hbWU9PT0iY29uZmlnLWRlYnVnInx8bmFtZT09PSJjb25maWctcmVsZWFzZSJ8fG5hbWU9PT0idmVyc2lvbnMifHxuYW1lPT09ImRlcGVuZGVuY2llcyJ8fG5hbWUuaW5kZXhPZigiLmpzIikhPT0tMXx8bmFtZS5pbmRleE9mKCIucmVzb3VyY2UiKSE9PS0xKXNlbGYuZmlsZS5wdXNoKG5hbWUpfWxlbmd0aD1zZWxmLmZpbGUubGVuZ3RoO2Zvcih2YXIgaT0wO2k8bGVuZ3RoO2krKyl7dmFyIG5hbWU9c2VsZi5maWxlW2ldO2lmKCFmaWxlc1tuYW1lXSlmaWxlc1tuYW1lXT1pc0xvYWRlZD8wOm51bGx9cmVmcmVzaCgpfSl9ZnVuY3Rpb24gcmVmcmVzaCgpe3ZhciBmaWxlbmFtZXM9T2JqZWN0LmtleXMoZmlsZXMpO3ZhciBsZW5ndGg9ZmlsZW5hbWVzLmxlbmd0aDtmb3IodmFyIGk9MDtpPGxlbmd0aDtpKyspe3ZhciBmaWxlbmFtZT1maWxlbmFtZXNbaV07KGZ1bmN0aW9uKGZpbGVuYW1lKXthc3luYy5hd2FpdChmdW5jdGlvbihuZXh0KXtmcy5zdGF0KGZpbGVuYW1lLGZ1bmN0aW9uKGVycixzdGF0KXtpZighZXJyKXt2YXIgdGlja3M9c3RhdC5tdGltZS5nZXRUaW1lKCk7aWYoZmlsZXNbZmlsZW5hbWVdIT09bnVsbCYmZmlsZXNbZmlsZW5hbWVdIT09dGlja3Mpe2NoYW5nZXMucHVzaChwcmVmaXgrZmlsZW5hbWUucmVwbGFjZShkaXJlY3RvcnksIiIpKyhmaWxlc1tmaWxlbmFtZV09PT0wPyIgKGFkZGVkKSI6IiAobW9kaWZpZWQpIikpO2ZvcmNlPXRydWV9ZmlsZXNbZmlsZW5hbWVdPXRpY2tzfWVsc2V7ZGVsZXRlIGZpbGVzW2ZpbGVuYW1lXTtjaGFuZ2VzLnB1c2gocHJlZml4K2ZpbGVuYW1lLnJlcGxhY2UoZGlyZWN0b3J5LCIiKSsiIChyZW1vdmVkKSIpO2ZvcmNlPXRydWV9bmV4dCgpfSl9KX0pKGZpbGVuYW1lKX1hc3luYy5jb21wbGV0ZShmdW5jdGlvbigpe2lzTG9hZGVkPXRydWU7c2V0VGltZW91dChyZWZyZXNoX2RpcmVjdG9yeSwyZTMpO2lmKHN0YXR1cyE9PTEpcmV0dXJuO2lmKCFmb3JjZSlyZXR1cm47cmVzdGFydCgpO3ZhciBsZW5ndGg9Y2hhbmdlcy5sZW5ndGg7Zm9yKHZhciBpPTA7aTxsZW5ndGg7aSsrKWNvbnNvbGUubG9nKGNoYW5nZXNbaV0pO2NoYW5nZXM9W107Zm9yY2U9ZmFsc2V9KX1mdW5jdGlvbiByZWZyZXNoX2RpcmVjdG9yeSgpe3V0aWxzLmxzKGRpcmVjdG9yaWVzLG9uQ29tcGxldGUsb25GaWx0ZXIpfWZ1bmN0aW9uIHJlc3RhcnQoKXtpZihhcHAhPT1udWxsKXt0cnl7aXNTa2lwPXRydWU7cHJvY2Vzcy5raWxsKGFwcC5waWQpfWNhdGNoKGVycil7fWFwcD1udWxsfXZhciBhcnI9cHJvY2Vzcy5hcmd2O3ZhciBwb3J0PWFyci5wb3AoKTtpZihmaXJzdClmaXJzdD1mYWxzZTtlbHNlIGFyci5wdXNoKCJyZXN0YXJ0Iik7YXJyLnB1c2goImRlYnVnZ2luZyIpO2Fyci5wdXNoKHBvcnQpO2FwcD1mb3JrKHBhdGguam9pbihkaXJlY3RvcnksImRlYnVnLmpzIiksYXJyKTthcHAub24oIm1lc3NhZ2UiLGZ1bmN0aW9uKG1zZyl7aWYobXNnPT09ImVhZGRyaW51c2UiKXByb2Nlc3MuZXhpdCgxKX0pO2FwcC5vbigiZXhpdCIsZnVuY3Rpb24oKXtpZihpc1NraXA9PT1mYWxzZSl7YXBwPW51bGw7cHJvY2Vzcy5leGl0KCk7cmV0dXJufWlzU2tpcD1mYWxzZTtpZihzdGF0dXMhPT0yNTUpcmV0dXJuO2FwcD1udWxsfSk7aWYoc3RhdHVzPT09MClhcHAuc2VuZCgiZGVidWdnaW5nIik7c3RhdHVzPTF9cHJvY2Vzcy5vbigiU0lHVEVSTSIsZW5kKTtwcm9jZXNzLm9uKCJTSUdJTlQiLGVuZCk7cHJvY2Vzcy5vbigiZXhpdCIsZW5kKTtmdW5jdGlvbiBlbmQoKXtpZihhcmd1bWVudHMuY2FsbGVlLmlzRW5kKXJldHVybjthcmd1bWVudHMuY2FsbGVlLmlzRW5kPXRydWU7ZnMudW5saW5rKHBpZCxub29wKTtpZihhcHA9PT1udWxsKXtwcm9jZXNzLmV4aXQoMCk7cmV0dXJufWlzU2tpcD10cnVlO3Byb2Nlc3Mua2lsbChhcHAucGlkKTthcHA9bnVsbDtwcm9jZXNzLmV4aXQoMCl9ZnVuY3Rpb24gbm9vcCgpe31pZihwcm9jZXNzLnBpZD4wKXtjb25zb2xlLmxvZyhwcmVmaXgrIlBJRDogIitwcm9jZXNzLnBpZCk7cGlkPXBhdGguam9pbihkaXJlY3RvcnksImRlYnVnLnBpZCIpO2ZzLndyaXRlRmlsZVN5bmMocGlkLHByb2Nlc3MucGlkKTtwaWRJbnRlcnZhbD1zZXRJbnRlcnZhbChmdW5jdGlvbigpe2ZzLmV4aXN0cyhwaWQsZnVuY3Rpb24oZXhpc3Qpe2lmKGV4aXN0KXJldHVybjtmcy51bmxpbmsocGlkLG5vb3ApO2lmKGFwcCE9PW51bGwpe2lzU2tpcD10cnVlO3Byb2Nlc3Mua2lsbChhcHAucGlkKX1wcm9jZXNzLmV4aXQoMCl9KX0sMmUzKX1yZXN0YXJ0KCk7cmVmcmVzaF9kaXJlY3RvcnkoKX1mdW5jdGlvbiBydW4oKXtpZihpc0RlYnVnZ2luZyl7ZGVidWcoKTtyZXR1cm59dmFyIGZpbGVuYW1lPXBhdGguam9pbihkaXJlY3RvcnksImRlYnVnLnBpZCIpO2lmKCFmcy5leGlzdHNTeW5jKGZpbGVuYW1lKSl7YXBwKCk7cmV0dXJufWZzLnVubGlua1N5bmMoZmlsZW5hbWUpO3NldFRpbWVvdXQoZnVuY3Rpb24oKXthcHAoKX0sM2UzKX1ydW4oKTs=', 'base64');
    fs.writeFileSync(path.join(directory, 'release.js'), 'Ly8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQovLyBJTVBPUlRBTlQ6IG9ubHkgZm9yIHByb2R1Y3Rpb24NCi8vIHRvdGFsLmpzIC0gd2ViIGFwcGxpY2F0aW9uIGZyYW1ld29yayBmb3Igbm9kZS5qcw0KLy8gaHR0cDovL3d3dy50b3RhbGpzLmNvbQ0KLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQoNCnZhciBmcyA9IHJlcXVpcmUoJ2ZzJyk7DQp2YXIgb3B0aW9ucyA9IHt9Ow0KDQovLyBvcHRpb25zLmlwID0gJzEyNy4wLjAuMSc7DQovLyBvcHRpb25zLnBvcnQgPSBwYXJzZUludChwcm9jZXNzLmFyZ3ZbMl0pOw0KLy8gb3B0aW9ucy5jb25maWcgPSB7IG5hbWU6ICd0b3RhbC5qcycgfTsNCi8vIG9wdGlvbnMuaHR0cHMgPSB7IGtleTogZnMucmVhZEZpbGVTeW5jKCdrZXlzL2FnZW50Mi1rZXkucGVtJyksIGNlcnQ6IGZzLnJlYWRGaWxlU3luYygna2V5cy9hZ2VudDItY2VydC5wZW0nKX07DQovLyBvcHRpb25zLnNsZWVwID0gMzAwMDsNCg0KLyoqDQogKiBSZWxlYXNlIG5vdGVzOg0KICovDQoNCnJlcXVpcmUoJ3RvdGFsLmpzJykuaHR0cCgncmVsZWFzZScsIG9wdGlvbnMpOw0KLy8gcmVxdWlyZSgndG90YWwuanMnKS5odHRwcygncmVsZWFzZScsIG9wdGlvbnMpOw==', 'base64');
    fs.writeFileSync(path.join(directory, 'test.js'), 'Ly8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQovLyBJTVBPUlRBTlQ6IG9ubHkgZm9yIHRlc3RpbmcNCi8vIHRvdGFsLmpzIC0gd2ViIGFwcGxpY2F0aW9uIGZyYW1ld29yayBmb3Igbm9kZS5qcw0KLy8gaHR0cDovL3d3dy50b3RhbGpzLmNvbQ0KLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQoNCnZhciBmcyA9IHJlcXVpcmUoJ2ZzJyk7DQp2YXIgb3B0aW9ucyA9IHt9Ow0KDQovLyBvcHRpb25zLnRlc3RzID0gWydjb250cm9sbGVycycsICdtb2R1bGVzJ107DQovLyBvcHRpb25zLmlwID0gJzEyNy4wLjAuMSc7DQovLyBvcHRpb25zLnBvcnQgPSBwYXJzZUludChwcm9jZXNzLmFyZ3ZbMl0pOw0KLy8gb3B0aW9ucy5jb25maWcgPSB7IG5hbWU6ICd0b3RhbC5qcycgfTsNCi8vIG9wdGlvbnMuaHR0cHMgPSB7IGtleTogZnMucmVhZEZpbGVTeW5jKCdrZXlzL2FnZW50Mi1rZXkucGVtJyksIGNlcnQ6IGZzLnJlYWRGaWxlU3luYygna2V5cy9hZ2VudDItY2VydC5wZW0nKX07DQovLyBvcHRpb25zLnNsZWVwID0gMzAwMDsNCg0KLyoqDQogKiBSZWxlYXNlIG5vdGVzOg0KICovDQoNCnJlcXVpcmUoJ3RvdGFsLmpzJykuaHR0cCgndGVzdCcsIG9wdGlvbnMpOw0KLy8gcmVxdWlyZSgndG90YWwuanMnKS5odHRwcygndGVzdCcsIG9wdGlvbnMpOw==', 'base64');
    fs.writeFileSync(path.join(directory, '.gitignore'), 'LkRTX1N0b3JlDQovdG1wLyoNCi9sb2dzLyoNCmRlYnVnLnBpZA0K', 'base64');
}

function createFileConfig(directory) {
    var buffer = [];

    buffer.push("name                     : My web site");
    buffer.push("version                  : 1.01");
    buffer.push("author                   : Your company name");
    buffer.push("secret                   : your-secret-key");
    buffer.push("");
    buffer.push("// Mail settings");
    buffer.push("mail.smtp                : smtp.yourwebsite.com");
    buffer.push('mail.smtp.options        : {"secure":false,"port":25,"user":"","password":"","timeout":10000}');
    buffer.push("mail.address.from        : your@yourwebsite.com");
    buffer.push("mail.address.reply       : your@yourwebsite.com");
    buffer.push("mail.address.bcc         : ");

    fs.writeFileSync(path.join(directory, 'config'), buffer.join(EOF));
    buffer = [];

    buffer.push("// default-ip               : 127.0.0.1");
    buffer.push("// default-port             : 8000");
    buffer.push("");

    fs.writeFileSync(path.join(directory, 'config-release'), buffer.join(EOF));
    fs.writeFileSync(path.join(directory, 'config-debug'), buffer.join(EOF).replace(/true/g, 'false'));

    if ($type !== 2)
        fs.writeFileSync(path.join(directory, 'config-test'), '');
}

function createFileViews(directory) {
    var buffer = [];
    var dir = path.join(directory, 'views');

    if (!fs.existsSync(dir))
        fs.mkdirSync(dir);


    if ($type !== 3) {
        buffer.push("@{meta('title', 'description', 'keywords')}");
        buffer.push("");
        buffer.push('<div>Hello world!</div>');
        fs.writeFileSync(path.join(dir, 'index.html'), buffer.join('\n'));
    }

    buffer = [];

    if ($type === 3) {
        buffer.push("@{layout('')}");
        buffer.push("@{meta('title', 'description', 'keywords')}");
        buffer.push('');
        buffer.push("@{ng('angular', 'resource', 'route')}");
        buffer.push('');
        buffer.push('<!-- /app/css/ -->')
        buffer.push("@{ngStyle('app')}");
        buffer.push('');
        buffer.push('<!-- cdnjs -->')
        buffer.push("@{ngLocale('en-us')}");
        buffer.push('');
        buffer.push('<!-- /app/controllers/ -->')
        buffer.push("@{ngController('home', 'user')}");
        buffer.push('');
    }

    buffer.push('<!DOCTYPE html>');

    if ($type === 3)
        buffer.push('<html ng-app="app">');
    else
        buffer.push('<html>');

    buffer.push('<head>');
    buffer.push('    @{meta}');
    buffer.push('    <meta charset="utf-8" />');
    buffer.push('    <meta http-equiv="X-UA-Compatible" content="IE=11" />');
    buffer.push('    <meta name="format-detection" content="telephone=no" />');
    buffer.push('    <meta name="viewport" content="width=device-width, initial-scale=1" />');
    buffer.push('    <meta name="robots" content="all,follow" />');
    buffer.push('    @{head}');

    if ($type !== 3) {
        buffer.push('    @{import(\'default.css\', \'default.js\', \'favicon.ico\')}');
        buffer.push('    <script src="//ajax.googleapis.com/ajax/libs/jquery/1.11.2/jquery.min.js"></script>');
    } else
        buffer.push('    @{import(\'favicon.ico\')}');

    buffer.push('</head>');
    buffer.push('<body>');
    buffer.push('');

    if ($type === 3)
        buffer.push('    <div ng-controller="HomeCtrl">{{ name }}</div>');
    else
        buffer.push('    @{body}');

    buffer.push('');
    buffer.push('</body>');
    buffer.push('</html>');


    fs.writeFileSync(path.join(dir, $type === 3 ? 'app.html' : 'layout.html'), buffer.join(EOF));
}

function createFileResource(directory) {
    var dir = path.join(directory, 'resources');
    fs.writeFileSync(path.join(dir, 'default.resource'), 'name                : value' + EOF);
}

function createFilePublicAngular(directory) {

    var dir = path.join(directory, 'app');
    var modules = path.join(directory, 'modules');
    var css = path.join(dir, 'css');
    var controllers = path.join(dir, 'controllers');
    var buffer = [];

    fs.mkdirSync(modules);

    buffer.push('User-agent: *');
    buffer.push('Allow: /');
    buffer.push('');

    fs.writeFileSync(path.join(dir, 'robots.txt'), buffer.join(EOF));
    fs.writeFileSync(path.join(css, 'app.css'), 'LyphdXRvKi8NCg0KYm9keSB7IHBhZGRpbmc6MjBweDsgbWFyZ2luOjA7IGZvbnQ6bm9ybWFsIDEycHggQXJpYWw7IGNvbG9yOiM1MDUwNTA7IH0NCg0KLmNvbnRlbnQgeyBtYXJnaW46MCBhdXRvOyB3aWR0aDogOTQwcHg7IHBhZGRpbmc6IDEwcHg7IGJvcmRlci1yYWRpdXM6IDVweDsgYm94LXNoYWRvdzogMCAwIDIwcHggcmdiYSgwLDAsMCwwLjUpOyBhbmltYXRpb246IG15QW5pbWF0aW9uIDVzIGFsdGVybmF0ZTsgfQ0KDQoubGlzdCB7IGJvcmRlci1ib3R0b206MXB4IHNvbGlkICNFMEUwRTA7IHBhZGRpbmctYm90dG9tOjVweDsgbWFyZ2luLWJvdHRvbTo1cHg7IH0NCi5saXN0ID4gZGl2OmZpcnN0LWNoaWxkIHsgZm9udC1zaXplOiAxNXB4OyB9DQoNCkBrZXlmcmFtZXMgbXlBbmltYXRpb24NCnsNCiAgICAwJSAgIHsgYmFja2dyb3VuZDogd2hpdGU7IH0NCiAgICAyNSUgIHsgYmFja2dyb3VuZDogI0YwRjBGMDsgfQ0KICAgIDUwJSAgeyBiYWNrZ3JvdW5kOiAjRDBEMEQwOyB9DQogICAgMTAwJSB7IGJhY2tncm91bmQ6ICNFMEUwRTA7IH0NCn0=', 'base64');
    fs.writeFileSync(path.join(modules, 'angular.js'), 'Ly8gTUlUIExpY2Vuc2UNCi8vIENvcHlyaWdodCBQZXRlciDFoGlya2EgPHBldGVyc2lya2FAZ21haWwuY29tPg0KLy8gVmVyc2lvbiAxLjAxDQoNCmV4cG9ydHMubmFtZSA9ICdhbmd1bGFyLmpzJzsNCmV4cG9ydHMudmVyc2lvbiA9ICcxLjAxJzsNCmV4cG9ydHMub3B0aW9ucyA9IHsgJ2FuZ3VsYXItdmVyc2lvbic6ICcxLjMuOCcsICdhbmd1bGFyLWkxOG4tdmVyc2lvbic6ICcxLjIuMTUnIH07DQoNCnZhciBmcyA9IHJlcXVpcmUoJ2ZzJyk7DQp2YXIgRVhURU5TSU9OX0pTID0gJy5qcyc7DQp2YXIgUkVQT1NJVE9SWV9BTkdVTEFSID0gJyRhbmd1bGFyJzsNCnZhciBSRVBPU0lUT1JZX0FOR1VMQVJfTE9DQUxFID0gJyRhbmd1bGFyLWxvY2FsZSc7DQp2YXIgUkVQT1NJVE9SWV9BTkdVTEFSX0NPTU1PTiA9ICckYW5ndWxhci1jb21tb24nOw0KdmFyIFJFUE9TSVRPUllfQU5HVUxBUl9DT05UUk9MTEVSID0gJyRhbmd1bGFyLWNvbnRyb2xsZXInOw0KdmFyIFJFUE9TSVRPUllfQU5HVUxBUl9PVEhFUiA9ICckYW5ndWxhci1vdGhlcic7DQoNCmV4cG9ydHMuaW5zdGFsbCA9IGZ1bmN0aW9uKGZyYW1ld29yaywgb3B0aW9ucykgew0KDQogICAgVXRpbHMuZXh0ZW5kKGV4cG9ydHMub3B0aW9ucywgb3B0aW9ucywgdHJ1ZSk7DQoNCiAgICAvKg0KICAgICAgICBJbmNsdWRlOiBBbmd1bGFyLmpzIENETiBpbnRvIHRoZSBoZWFkDQogICAgICAgIEB2ZXJzaW9uIHtTdHJpbmd9DQogICAgICAgIEBuYW1lIHtTdHJpbmcgb3IgU3RyaW5nIEFycmF5fSA6OiBvcHRpb25hbCwgZXhhbXBsZTogcm91dGUgb3IgcmVzb3VyY2UNCiAgICAgICAgcmV0dXJuIHtTdHJpbmd9DQogICAgKi8NCiAgICBmcmFtZXdvcmsuaGVscGVycy5uZyA9IGZ1bmN0aW9uKG5hbWUpIHsNCiAgICAgICAgdmFyIHNlbGYgPSB0aGlzOw0KDQogICAgICAgIHZhciBsZW5ndGggPSBhcmd1bWVudHMubGVuZ3RoOw0KICAgICAgICBpZiAobGVuZ3RoID4gMSkgew0KICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBsZW5ndGg7IGkrKykNCiAgICAgICAgICAgICAgICBmcmFtZXdvcmsuaGVscGVycy5uZy5jYWxsKHNlbGYsIGFyZ3VtZW50c1tpXSk7DQogICAgICAgICAgICByZXR1cm4gJyc7DQogICAgICAgIH0NCg0KICAgICAgICBpZiAobmFtZSBpbnN0YW5jZW9mIEFycmF5KSB7DQogICAgICAgICAgICBsZW5ndGggPSBuYW1lLmxlbmd0aDsNCiAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbGVuZ3RoOyBpKyspDQogICAgICAgICAgICAgICAgZnJhbWV3b3JrLmhlbHBlcnMubmcuY2FsbChzZWxmLCBuYW1lW2ldKTsNCiAgICAgICAgICAgIHJldHVybiAnJzsNCiAgICAgICAgfQ0KDQogICAgICAgIHZhciBpc0NvbW1vbiA9IG5hbWVbMF0gPT09ICd+JzsNCg0KICAgICAgICBpZiAoaXNDb21tb24pDQogICAgICAgICAgICBuYW1lID0gbmFtZS5zdWJzdHJpbmcoMSk7DQoNCiAgICAgICAgaWYgKG5hbWUgPT09IHVuZGVmaW5lZCkNCiAgICAgICAgICAgIG5hbWUgPSAnYW5ndWxhcic7DQoNCiAgICAgICAgaWYgKG5hbWUgPT09ICdjb3JlJyB8fCBuYW1lID09PSAnJyB8fCBuYW1lID09PSAnYmFzZScgfHwgbmFtZSA9PT0gJ21haW4nKQ0KICAgICAgICAgICAgbmFtZSA9ICdhbmd1bGFyJzsNCg0KICAgICAgICBpZiAobmFtZSAhPT0gJ2FuZ3VsYXInICYmIG5hbWUuaW5kZXhPZignYW5ndWxhci0nKSA9PT0gLTEpDQogICAgICAgICAgICBuYW1lID0gJ2FuZ3VsYXItJyArIG5hbWU7DQoNCiAgICAgICAgdmFyIG91dHB1dCA9IHNlbGYucmVwb3NpdG9yeVtSRVBPU0lUT1JZX0FOR1VMQVJdIHx8ICcnOw0KICAgICAgICB2YXIgc2NyaXB0ID0gJHNjcmlwdF9jcmVhdGUoKGlzQ29tbW9uID8gJy9jb21tb24vJyArIG5hbWUgKyAnLm1pbi5qcycgOiAnLy9jZG5qcy5jbG91ZGZsYXJlLmNvbS9hamF4L2xpYnMvYW5ndWxhci5qcy8nICsgZXhwb3J0cy5vcHRpb25zWydhbmd1bGFyLXZlcnNpb24nXSArICcvJyArIG5hbWUgKyAnLm1pbi5qcycpKTsNCg0KICAgICAgICBpZiAobmFtZSA9PT0gJ2FuZ3VsYXInKQ0KICAgICAgICAgICAgb3V0cHV0ID0gc2NyaXB0ICsgb3V0cHV0Ow0KICAgICAgICBlbHNlDQogICAgICAgICAgICBvdXRwdXQgKz0gc2NyaXB0Ow0KDQogICAgICAgIHNlbGYucmVwb3NpdG9yeVtSRVBPU0lUT1JZX0FOR1VMQVJdID0gb3V0cHV0Ow0KICAgICAgICByZXR1cm4gJyc7DQogICAgfTsNCg0KDQogICAgZnJhbWV3b3JrLmhlbHBlcnMubmdDb21tb24gPSBmdW5jdGlvbihuYW1lKSB7DQoNCiAgICAgICAgdmFyIHNlbGYgPSB0aGlzOw0KICAgICAgICB2YXIgbGVuZ3RoID0gYXJndW1lbnRzLmxlbmd0aDsNCg0KICAgICAgICBpZiAobGVuZ3RoID4gMSkgew0KICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBsZW5ndGg7IGkrKykNCiAgICAgICAgICAgICAgICBzZWxmLm5nQ29tbW9uLmNhbGwoc2VsZiwgYXJndW1lbnRzW2ldKTsNCiAgICAgICAgICAgIHJldHVybiAnJzsNCiAgICAgICAgfQ0KDQogICAgICAgIGlmIChuYW1lIGluc3RhbmNlb2YgQXJyYXkpIHsNCiAgICAgICAgICAgIGxlbmd0aCA9IG5hbWUubGVuZ3RoOw0KICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBsZW5ndGg7IGkrKykNCiAgICAgICAgICAgICAgICBzZWxmLm5nQ29tbW9uLmNhbGwoc2VsZiwgbmFtZVtpXSk7DQogICAgICAgICAgICByZXR1cm4gJyc7DQogICAgICAgIH0NCg0KICAgICAgICB2YXIgb3V0cHV0ID0gc2VsZi5yZXBvc2l0b3J5W1JFUE9TSVRPUllfQU5HVUxBUl9DT01NT05dIHx8ICcnOw0KDQogICAgICAgIGlmIChuYW1lLmxhc3RJbmRleE9mKEVYVEVOU0lPTl9KUykgPT09IC0xKQ0KICAgICAgICAgICAgbmFtZSArPSBFWFRFTlNJT05fSlM7DQoNCiAgICAgICAgdmFyIHNjcmlwdCA9ICRzY3JpcHRfY3JlYXRlKCcvY29tbW9uLycgKyBuYW1lKTsNCiAgICAgICAgb3V0cHV0ICs9IHNjcmlwdDsNCg0KICAgICAgICBzZWxmLnJlcG9zaXRvcnlbUkVQT1NJVE9SWV9BTkdVTEFSX0NPTU1PTl0gPSBvdXRwdXQ7DQogICAgICAgIHJldHVybiAnJzsNCiAgICB9Ow0KDQogICAgZnJhbWV3b3JrLmhlbHBlcnMubmdMb2NhbGUgPSBmdW5jdGlvbihuYW1lKSB7DQoNCiAgICAgICAgdmFyIHNlbGYgPSB0aGlzOw0KICAgICAgICB2YXIgbGVuZ3RoID0gYXJndW1lbnRzLmxlbmd0aDsNCg0KICAgICAgICBpZiAobGVuZ3RoID4gMikgew0KICAgICAgICAgICAgZm9yICh2YXIgaSA9IDE7IGkgPCBsZW5ndGg7IGkrKykNCiAgICAgICAgICAgICAgICBmcmFtZXdvcmsuaGVscGVycy5uZ0xvY2FsZS5jYWxsKHNlbGYsIGFyZ3VtZW50c1tpXSk7DQogICAgICAgICAgICByZXR1cm4gJyc7DQogICAgICAgIH0NCg0KICAgICAgICBpZiAobmFtZSBpbnN0YW5jZW9mIEFycmF5KSB7DQogICAgICAgICAgICBsZW5ndGggPSBuYW1lLmxlbmd0aDsNCiAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbGVuZ3RoOyBpKyspDQogICAgICAgICAgICAgICAgZnJhbWV3b3JrLmhlbHBlcnMubmdMb2NhbGUuY2FsbChzZWxmLCBuYW1lW2ldKTsNCiAgICAgICAgICAgIHJldHVybiAnJzsNCiAgICAgICAgfQ0KDQogICAgICAgIHZhciBvdXRwdXQgPSBzZWxmLnJlcG9zaXRvcnlbUkVQT1NJVE9SWV9BTkdVTEFSX0xPQ0FMRV0gfHwgJyc7DQogICAgICAgIHZhciBpc0xvY2FsID0gbmFtZVswXSA9PT0gJ34nOw0KICAgICAgICB2YXIgZXh0ZW5zaW9uID0gJyc7DQoNCiAgICAgICAgaWYgKGlzTG9jYWwpDQogICAgICAgICAgICBuYW1lID0gbmFtZS5zdWJzdHJpbmcoMSk7DQoNCiAgICAgICAgaWYgKG5hbWUuaW5kZXhPZignYW5ndWxhci1sb2NhbGVfJykgIT09IC0xKQ0KICAgICAgICAgICAgbmFtZSA9IG5hbWUucmVwbGFjZSgnYW5ndWxhci1sb2NhbGVfJywgJycpOw0KDQogICAgICAgIGlmIChuYW1lLmxhc3RJbmRleE9mKEVYVEVOU0lPTl9KUykgPT09IC0xKQ0KICAgICAgICAgICAgZXh0ZW5zaW9uID0gRVhURU5TSU9OX0pTOw0KDQogICAgICAgIG91dHB1dCArPSAkc2NyaXB0X2NyZWF0ZShpc0xvY2FsID8gJy9pMThuL2FuZ3VsYXItbG9jYWxlXycgKyBuYW1lICsgZXh0ZW5zaW9uIDogJy8vY2RuanMuY2xvdWRmbGFyZS5jb20vYWpheC9saWJzL2FuZ3VsYXItaTE4bi8nICsgZXhwb3J0cy5vcHRpb25zWydhbmd1bGFyLWkxOG4tdmVyc2lvbiddICsgJy9hbmd1bGFyLWxvY2FsZV8nICsgbmFtZSArIGV4dGVuc2lvbik7DQogICAgICAgIHNlbGYucmVwb3NpdG9yeVtSRVBPU0lUT1JZX0FOR1VMQVJfTE9DQUxFXSA9IG91dHB1dDsNCg0KICAgICAgICByZXR1cm4gJyc7DQogICAgfTsNCg0KICAgIC8qDQogICAgICAgIEluY2x1ZGU6IENvbnRyb2xsZXIgaW50byB0aGUgaGVhZA0KICAgICAgICBAbmFtZSB7U3RyaW5nIG9yIFN0cmluZyBBcnJheX0NCiAgICAgICAgcmV0dXJuIHtTdHJpbmd9DQogICAgKi8NCiAgICBmcmFtZXdvcmsuaGVscGVycy5uZ0NvbnRyb2xsZXIgPSBmdW5jdGlvbihuYW1lKSB7DQoNCiAgICAgICAgdmFyIHNlbGYgPSB0aGlzOw0KDQogICAgICAgIHZhciBsZW5ndGggPSBhcmd1bWVudHMubGVuZ3RoOw0KICAgICAgICBpZiAobGVuZ3RoID4gMSkgew0KICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBsZW5ndGg7IGkrKykNCiAgICAgICAgICAgICAgICBmcmFtZXdvcmsuaGVscGVycy5uZ0NvbnRyb2xsZXIuY2FsbChzZWxmLCBhcmd1bWVudHNbaV0pOw0KICAgICAgICAgICAgcmV0dXJuICcnOw0KICAgICAgICB9DQoNCiAgICAgICAgaWYgKG5hbWUgaW5zdGFuY2VvZiBBcnJheSkgew0KICAgICAgICAgICAgbGVuZ3RoID0gbmFtZS5sZW5ndGg7DQogICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGxlbmd0aDsgaSsrKQ0KICAgICAgICAgICAgICAgIGZyYW1ld29yay5oZWxwZXJzLm5nQ29udHJvbGxlci5jYWxsKHNlbGYsIG5hbWVbaV0pOw0KICAgICAgICAgICAgcmV0dXJuICcnOw0KICAgICAgICB9DQoNCiAgICAgICAgaWYgKG5hbWUubGFzdEluZGV4T2YoRVhURU5TSU9OX0pTKSA9PT0gLTEpDQogICAgICAgICAgICBuYW1lICs9IEVYVEVOU0lPTl9KUzsNCg0KICAgICAgICB2YXIgb3V0cHV0ID0gc2VsZi5yZXBvc2l0b3J5W1JFUE9TSVRPUllfQU5HVUxBUl9DT05UUk9MTEVSXSB8fCAnJzsNCiAgICAgICAgdmFyIGlzTG9jYWwgPSBuYW1lWzBdID09PSAnfic7DQoNCiAgICAgICAgaWYgKGlzTG9jYWwpDQogICAgICAgICAgICBuYW1lID0gbmFtZS5zdWJzdHJpbmcoMSk7DQoNCiAgICAgICAgb3V0cHV0ICs9ICRzY3JpcHRfY3JlYXRlKCcvY29udHJvbGxlcnMvJyArIG5hbWUpOw0KDQogICAgICAgIHNlbGYucmVwb3NpdG9yeVtSRVBPU0lUT1JZX0FOR1VMQVJfQ09OVFJPTExFUl0gPSBvdXRwdXQ7DQoNCiAgICAgICAgcmV0dXJuICcnOw0KICAgIH07DQoNCiAgICAvKg0KICAgICAgICBJbmNsdWRlOiBDb250ZW50IGZyb20gZmlsZSBpbnRvIHRoZSBib2R5DQogICAgICAgIEBuYW1lIHtTdHJpbmd9DQogICAgICAgIHJldHVybiB7U3RyaW5nfQ0KICAgICovDQogICAgZnJhbWV3b3JrLmhlbHBlcnMubmdUZW1wbGF0ZSA9IGZ1bmN0aW9uKG5hbWUsIGlkKSB7DQoNCiAgICAgICAgdmFyIHNlbGYgPSB0aGlzOw0KDQogICAgICAgIGlmIChpZCA9PT0gdW5kZWZpbmVkKQ0KICAgICAgICAgICAgaWQgPSBuYW1lOw0KDQogICAgICAgIGlmIChuYW1lLmxhc3RJbmRleE9mKCcuaHRtbCcpID09PSAtMSkNCiAgICAgICAgICAgIG5hbWUgKz0gJy5odG1sJzsNCg0KICAgICAgICBpZiAobmFtZVswXSA9PT0gJ34nKQ0KICAgICAgICAgICAgbmFtZSA9IG5hbWUuc3Vic3RyaW5nKDEpOw0KICAgICAgICBlbHNlIGlmIChuYW1lWzFdICE9PSAnLycpDQogICAgICAgICAgICBuYW1lID0gJy90ZW1wbGF0ZXMvJyArIG5hbWU7DQoNCiAgICAgICAgdmFyIGtleSA9ICduZy0nICsgbmFtZTsNCiAgICAgICAgdmFyIHRtcCA9IGZyYW1ld29yay50ZW1wb3Jhcnkudmlld3Nba2V5XTsNCg0KICAgICAgICBpZiAodG1wID09PSB1bmRlZmluZWQpIHsNCiAgICAgICAgICAgIHZhciBmaWxlbmFtZSA9IHV0aWxzLmNvbWJpbmUoc2VsZi5jb25maWdbJ2RpcmVjdG9yeS1wdWJsaWMtdmlydHVhbCddLCBuYW1lKTsNCg0KICAgICAgICAgICAgaWYgKGZzLmV4aXN0c1N5bmMoZmlsZW5hbWUpKQ0KICAgICAgICAgICAgICAgIHRtcCA9IGZzLnJlYWRGaWxlU3luYyhmaWxlbmFtZSkudG9TdHJpbmcoJ3V0ZjgnKTsNCiAgICAgICAgICAgIGVsc2UNCiAgICAgICAgICAgICAgICB0bXAgPSAnJzsNCg0KICAgICAgICAgICAgaWYgKCFzZWxmLmlzRGVidWcpDQogICAgICAgICAgICAgICAgZnJhbWV3b3JrLnRlbXBvcmFyeS52aWV3c1trZXldID0gdG1wOw0KICAgICAgICB9DQoNCiAgICAgICAgcmV0dXJuICc8c2NyaXB0IHR5cGU9InRleHQvbmctdGVtcGxhdGUiIGlkPSInICsgaWQgKyAnIj4nICsgdG1wICsgJzwvc2NyaXB0Pic7DQogICAgfTsNCg0KICAgIC8qDQogICAgICAgIEluY2x1ZGU6IERpcmVjdGl2ZSBpbnRvIHRoZSBoZWFkDQogICAgICAgIEBuYW1lIHtTdHJpbmd9DQogICAgICAgIHJldHVybiB7U3RyaW5nfQ0KICAgICovDQogICAgZnJhbWV3b3JrLmhlbHBlcnMubmdEaXJlY3RpdmUgPSBmdW5jdGlvbihuYW1lKSB7DQoNCiAgICAgICAgdmFyIHNlbGYgPSB0aGlzOw0KDQogICAgICAgIHZhciBsZW5ndGggPSBhcmd1bWVudHMubGVuZ3RoOw0KICAgICAgICBpZiAobGVuZ3RoID4gMSkgew0KICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBsZW5ndGg7IGkrKykNCiAgICAgICAgICAgICAgICBmcmFtZXdvcmsuaGVscGVycy5uZ0RpcmVjdGl2ZS5jYWxsKHNlbGYsIGFyZ3VtZW50c1tpXSk7DQogICAgICAgICAgICByZXR1cm4gJyc7DQogICAgICAgIH0NCg0KICAgICAgICBpZiAobmFtZSBpbnN0YW5jZW9mIEFycmF5KSB7DQogICAgICAgICAgICBsZW5ndGggPSBuYW1lLmxlbmd0aDsNCiAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbGVuZ3RoOyBpKyspDQogICAgICAgICAgICAgICAgZnJhbWV3b3JrLmhlbHBlcnMubmdEaXJlY3RpdmUuY2FsbChzZWxmLCBuYW1lW2ldKTsNCiAgICAgICAgICAgIHJldHVybiAnJzsNCiAgICAgICAgfQ0KDQogICAgICAgIGlmIChuYW1lLmxhc3RJbmRleE9mKEVYVEVOU0lPTl9KUykgPT09IC0xKQ0KICAgICAgICAgICAgbmFtZSArPSBFWFRFTlNJT05fSlM7DQoNCiAgICAgICAgdmFyIG91dHB1dCA9IHNlbGYucmVwb3NpdG9yeVtSRVBPU0lUT1JZX0FOR1VMQVJfT1RIRVJdIHx8ICcnOw0KICAgICAgICB2YXIgaXNMb2NhbCA9IG5hbWVbMF0gPT09ICd+JzsNCg0KICAgICAgICBpZiAoaXNMb2NhbCkNCiAgICAgICAgICAgIG5hbWUgPSBuYW1lLnN1YnN0cmluZygxKTsNCg0KICAgICAgICBvdXRwdXQgKz0gJHNjcmlwdF9jcmVhdGUoJy9kaXJlY3RpdmVzLycgKyBuYW1lKTsNCiAgICAgICAgc2VsZi5yZXBvc2l0b3J5W1JFUE9TSVRPUllfQU5HVUxBUl9PVEhFUl0gPSBvdXRwdXQ7DQogICAgICAgIHJldHVybiAnJzsNCiAgICB9Ow0KDQogICAgLyoNCiAgICAgICAgSW5jbHVkZTogQ1NTIGludG8gdGhlIGhlYWQNCiAgICAgICAgQG5hbWUge1N0cmluZ30NCiAgICAgICAgcmV0dXJuIHtTdHJpbmd9DQogICAgKi8NCiAgICBmcmFtZXdvcmsuaGVscGVycy5uZ1N0eWxlID0gZnVuY3Rpb24obmFtZSkgew0KDQogICAgICAgIHZhciBzZWxmID0gdGhpczsNCiAgICAgICAgdmFyIGxlbmd0aCA9IGFyZ3VtZW50cy5sZW5ndGg7DQoNCiAgICAgICAgaWYgKGxlbmd0aCA+IDEpIHsNCiAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbGVuZ3RoOyBpKyspDQogICAgICAgICAgICAgICAgZnJhbWV3b3JrLmhlbHBlcnMubmdTdHlsZS5jYWxsKHNlbGYsIGFyZ3VtZW50c1tpXSk7DQogICAgICAgICAgICByZXR1cm4gJyc7DQogICAgICAgIH0NCg0KICAgICAgICBpZiAobmFtZSBpbnN0YW5jZW9mIEFycmF5KSB7DQogICAgICAgICAgICBsZW5ndGggPSBuYW1lLmxlbmd0aDsNCiAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbGVuZ3RoOyBpKyspDQogICAgICAgICAgICAgICAgZnJhbWV3b3JrLmhlbHBlcnMubmdTdHlsZS5jYWxsKHNlbGYsIG5hbWVbaV0pOw0KICAgICAgICAgICAgcmV0dXJuICcnOw0KICAgICAgICB9DQoNCiAgICAgICAgaWYgKG5hbWUubGFzdEluZGV4T2YoJy5jc3MnKSA9PT0gLTEpDQogICAgICAgICAgICBuYW1lICs9ICcuY3NzJzsNCg0KICAgICAgICBzZWxmLmhlYWQobmFtZSk7DQogICAgICAgIHJldHVybiAnJzsNCiAgICB9Ow0KDQogICAgLyoNCiAgICAgICAgSW5jbHVkZTogU2VydmljZSBpbnRvIHRoZSBoZWFkDQogICAgICAgIEBuYW1lIHtTdHJpbmd9DQogICAgICAgIHJldHVybiB7U3RyaW5nfQ0KICAgICovDQogICAgZnJhbWV3b3JrLmhlbHBlcnMubmdTZXJ2aWNlID0gZnVuY3Rpb24obmFtZSkgew0KDQogICAgICAgIHZhciBzZWxmID0gdGhpczsNCg0KICAgICAgICB2YXIgbGVuZ3RoID0gYXJndW1lbnRzLmxlbmd0aDsNCiAgICAgICAgaWYgKGxlbmd0aCA+IDEpIHsNCiAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbGVuZ3RoOyBpKyspDQogICAgICAgICAgICAgICAgZnJhbWV3b3JrLmhlbHBlcnMubmdTZXJ2aWNlLmNhbGwoc2VsZiwgYXJndW1lbnRzW2ldKTsNCiAgICAgICAgICAgIHJldHVybiAnJzsNCiAgICAgICAgfQ0KDQogICAgICAgIGlmIChuYW1lIGluc3RhbmNlb2YgQXJyYXkpIHsNCiAgICAgICAgICAgIGxlbmd0aCA9IG5hbWUubGVuZ3RoOw0KICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBsZW5ndGg7IGkrKykNCiAgICAgICAgICAgICAgICBmcmFtZXdvcmsuaGVscGVycy5uZ1NlcnZpY2UuY2FsbChzZWxmLCBuYW1lW2ldKTsNCiAgICAgICAgICAgIHJldHVybiAnJzsNCiAgICAgICAgfQ0KDQogICAgICAgIGlmIChuYW1lLmxhc3RJbmRleE9mKEVYVEVOU0lPTl9KUykgPT09IC0xKQ0KICAgICAgICAgICAgbmFtZSArPSBFWFRFTlNJT05fSlM7DQoNCiAgICAgICAgdmFyIG91dHB1dCA9IHNlbGYucmVwb3NpdG9yeVtSRVBPU0lUT1JZX0FOR1VMQVJfT1RIRVJdIHx8ICcnOw0KICAgICAgICB2YXIgaXNMb2NhbCA9IG5hbWVbMF0gPT09ICd+JzsNCg0KICAgICAgICBpZiAoaXNMb2NhbCkNCiAgICAgICAgICAgIG5hbWUgPSBuYW1lLnN1YnN0cmluZygxKTsNCg0KICAgICAgICBvdXRwdXQgKz0gJHNjcmlwdF9jcmVhdGUoJy9zZXJ2aWNlcy8nICsgbmFtZSk7DQogICAgICAgIHNlbGYucmVwb3NpdG9yeVtSRVBPU0lUT1JZX0FOR1VMQVJfT1RIRVJdID0gb3V0cHV0Ow0KDQogICAgICAgIHJldHVybiAnJzsNCiAgICB9Ow0KDQogICAgLyoNCiAgICAgICAgSW5jbHVkZTogRmlsdGVyIGludG8gdGhlIGhlYWQNCiAgICAgICAgQG5hbWUge1N0cmluZ30NCiAgICAgICAgcmV0dXJuIHtTdHJpbmd9DQogICAgKi8NCiAgICBmcmFtZXdvcmsuaGVscGVycy5uZ0ZpbHRlciA9IGZ1bmN0aW9uKG5hbWUpIHsNCg0KICAgICAgICB2YXIgc2VsZiA9IHRoaXM7DQoNCiAgICAgICAgdmFyIGxlbmd0aCA9IGFyZ3VtZW50cy5sZW5ndGg7DQogICAgICAgIGlmIChsZW5ndGggPiAxKSB7DQogICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGxlbmd0aDsgaSsrKQ0KICAgICAgICAgICAgICAgIGZyYW1ld29yay5oZWxwZXJzLm5nRmlsdGVyLmNhbGwoc2VsZiwgYXJndW1lbnRzW2ldKTsNCiAgICAgICAgICAgIHJldHVybiAnJzsNCiAgICAgICAgfQ0KDQogICAgICAgIGlmIChuYW1lIGluc3RhbmNlb2YgQXJyYXkpIHsNCiAgICAgICAgICAgIGxlbmd0aCA9IG5hbWUubGVuZ3RoOw0KICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBsZW5ndGg7IGkrKykNCiAgICAgICAgICAgICAgICBmcmFtZXdvcmsuaGVscGVycy5uZ0ZpbHRlci5jYWxsKHNlbGYsIG5hbWVbaV0pOw0KICAgICAgICAgICAgcmV0dXJuICcnOw0KICAgICAgICB9DQoNCiAgICAgICAgaWYgKG5hbWUubGFzdEluZGV4T2YoRVhURU5TSU9OX0pTKSA9PT0gLTEpDQogICAgICAgICAgICBuYW1lICs9IEVYVEVOU0lPTl9KUzsNCg0KICAgICAgICB2YXIgb3V0cHV0ID0gc2VsZi5yZXBvc2l0b3J5W1JFUE9TSVRPUllfQU5HVUxBUl9PVEhFUl0gfHwgJyc7DQogICAgICAgIHZhciBpc0xvY2FsID0gbmFtZVswXSA9PT0gJ34nOw0KDQogICAgICAgIGlmIChpc0xvY2FsKQ0KICAgICAgICAgICAgbmFtZSA9IG5hbWUuc3Vic3RyaW5nKDEpOw0KDQogICAgICAgIG91dHB1dCArPSAkc2NyaXB0X2NyZWF0ZSgnL2ZpbHRlcnMvJyArIG5hbWUpOw0KICAgICAgICBzZWxmLnJlcG9zaXRvcnlbUkVQT1NJVE9SWV9BTkdVTEFSX09USEVSXSA9IG91dHB1dDsNCg0KICAgICAgICByZXR1cm4gJyc7DQogICAgfTsNCg0KICAgIC8qDQogICAgICAgIEluY2x1ZGU6IFJlc291cmNlIGludG8gdGhlIGhlYWQNCiAgICAgICAgQG5hbWUge1N0cmluZ30NCiAgICAgICAgcmV0dXJuIHtTdHJpbmd9DQogICAgKi8NCiAgICBmcmFtZXdvcmsuaGVscGVycy5uZ1Jlc291cmNlID0gZnVuY3Rpb24obmFtZSkgew0KDQogICAgICAgIHZhciBzZWxmID0gdGhpczsNCg0KICAgICAgICB2YXIgbGVuZ3RoID0gYXJndW1lbnRzLmxlbmd0aDsNCiAgICAgICAgaWYgKGxlbmd0aCA+IDEpIHsNCiAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbGVuZ3RoOyBpKyspDQogICAgICAgICAgICAgICAgZnJhbWV3b3JrLmhlbHBlcnMubmdSZXNvdXJjZS5jYWxsKHNlbGYsIGFyZ3VtZW50c1tpXSk7DQogICAgICAgICAgICByZXR1cm4gJyc7DQogICAgICAgIH0NCg0KICAgICAgICBpZiAobmFtZSBpbnN0YW5jZW9mIEFycmF5KSB7DQogICAgICAgICAgICBsZW5ndGggPSBuYW1lLmxlbmd0aDsNCiAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbGVuZ3RoOyBpKyspDQogICAgICAgICAgICAgICAgZnJhbWV3b3JrLmhlbHBlcnMubmdSZXNvdXJjZS5jYWxsKHNlbGYsIG5hbWVbaV0pOw0KICAgICAgICAgICAgcmV0dXJuICcnOw0KICAgICAgICB9DQoNCiAgICAgICAgaWYgKG5hbWUubGFzdEluZGV4T2YoRVhURU5TSU9OX0pTKSA9PT0gLTEpDQogICAgICAgICAgICBuYW1lICs9IEVYVEVOU0lPTl9KUzsNCg0KICAgICAgICB2YXIgb3V0cHV0ID0gc2VsZi5yZXBvc2l0b3J5W1JFUE9TSVRPUllfQU5HVUxBUl9PVEhFUl0gfHwgJyc7DQogICAgICAgIHZhciBpc0xvY2FsID0gbmFtZVswXSA9PT0gJ34nOw0KDQogICAgICAgIGlmIChpc0xvY2FsKQ0KICAgICAgICAgICAgbmFtZSA9IG5hbWUuc3Vic3RyaW5nKDEpOw0KDQogICAgICAgIG91dHB1dCArPSAkc2NyaXB0X2NyZWF0ZSgnL3Jlc291cmNlcy8nICsgbmFtZSk7DQogICAgICAgIHNlbGYucmVwb3NpdG9yeVtSRVBPU0lUT1JZX0FOR1VMQVJfT1RIRVJdID0gb3V0cHV0Ow0KDQogICAgICAgIHJldHVybiAnJzsNCiAgICB9Ow0KDQogICAgZnJhbWV3b3JrLmhlbHBlcnMubmdJbmNsdWRlID0gZnVuY3Rpb24obmFtZSkgew0KICAgICAgICB2YXIgc2VsZiA9IHRoaXM7DQoNCiAgICAgICAgaWYgKG5hbWUubGFzdEluZGV4T2YoRVhURU5TSU9OX0pTKSA9PT0gLTEpDQogICAgICAgICAgICBuYW1lICs9IEVYVEVOU0lPTl9KUzsNCg0KICAgICAgICByZXR1cm4gJHNjcmlwdF9jcmVhdGUobmFtZSk7DQogICAgfTsNCg0KICAgIGZyYW1ld29yay5vbignY29udHJvbGxlci1yZW5kZXItaGVhZCcsIGV2ZW50X3JlbmRlcl9oZWFkKTsNCn07DQoNCmV4cG9ydHMudW5pbnN0YWxsID0gZnVuY3Rpb24oZnJhbWV3b3JrKSB7DQogICAgZGVsZXRlIGZyYW1ld29yay5oZWxwZXJzLm5nOw0KICAgIGRlbGV0ZSBmcmFtZXdvcmsuaGVscGVycy5uZ0luY2x1ZGU7DQogICAgZGVsZXRlIGZyYW1ld29yay5oZWxwZXJzLm5nUmVzb3VyY2U7DQogICAgZGVsZXRlIGZyYW1ld29yay5oZWxwZXJzLm5nRmlsdGVyOw0KICAgIGRlbGV0ZSBmcmFtZXdvcmsuaGVscGVycy5uZ1NlcnZpY2U7DQogICAgZGVsZXRlIGZyYW1ld29yay5oZWxwZXJzLm5nRGlyZWN0aXZlOw0KICAgIGRlbGV0ZSBmcmFtZXdvcmsuaGVscGVycy5uZ1RlbXBsYXRlOw0KICAgIGRlbGV0ZSBmcmFtZXdvcmsuaGVscGVycy5uZ0NvbnRyb2xsZXI7DQogICAgZGVsZXRlIGZyYW1ld29yay5oZWxwZXJzLm5nTG9jYWxlOw0KICAgIGRlbGV0ZSBmcmFtZXdvcmsuaGVscGVycy5uZ0NvbW1vbjsNCiAgICBmcmFtZXdvcmsucmVtb3ZlTGlzdGVuZXIoJ2NvbnRyb2xsZXItcmVuZGVyLWhlYWQnLCBldmVudF9yZW5kZXJfaGVhZCk7DQp9Ow0KDQpmdW5jdGlvbiBldmVudF9yZW5kZXJfaGVhZChjb250cm9sbGVyKSB7DQogICAgdmFyIHNlbGYgPSBjb250cm9sbGVyOw0KICAgIHZhciBhbmd1bGFyQmVnID0gKHNlbGYucmVwb3NpdG9yeVtSRVBPU0lUT1JZX0FOR1VMQVJdIHx8ICcnKSArIChzZWxmLnJlcG9zaXRvcnlbUkVQT1NJVE9SWV9BTkdVTEFSX0NPTU1PTl0gfHwgJycpICsgKHNlbGYucmVwb3NpdG9yeVtSRVBPU0lUT1JZX0FOR1VMQVJfTE9DQUxFXSB8fCAnJyk7DQogICAgdmFyIGFuZ3VsYXJFbmQgPSAoYW5ndWxhckJlZy5sZW5ndGggPiAwID8gJHNjcmlwdF9jcmVhdGUoJy9hcHAuanMnKSA6ICcnKSArIChzZWxmLnJlcG9zaXRvcnlbUkVQT1NJVE9SWV9BTkdVTEFSX09USEVSXSB8fCAnJykgKyAoc2VsZi5yZXBvc2l0b3J5W1JFUE9TSVRPUllfQU5HVUxBUl9DT05UUk9MTEVSXSB8fCAnJyk7DQogICAgc2VsZi5yZXBvc2l0b3J5WyckaGVhZCddICs9IGFuZ3VsYXJCZWcgKyBhbmd1bGFyRW5kOw0KfQ0KDQpmdW5jdGlvbiAkc2NyaXB0X2NyZWF0ZSh1cmwpIHsNCiAgICByZXR1cm4gJzxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0IiBzcmM9IicgKyB1cmwgKyAnIj48L3NjcmlwdD4nOw0KfQ==', 'base64');

    buffer = [];
    buffer.push("var app = angular.module('app', []);");
    buffer.push('');
    fs.writeFileSync(path.join(dir, 'app.js'), buffer.join(EOF));

    buffer = [];
    buffer.push('app.controller(\'HomeCtrl\', [\'$scope\', function($scope) {\n    $scope.name = \'total.js + angular.js = awesome\';\n}]);');
    fs.writeFileSync(path.join(controllers, 'home.js'), buffer.join(EOF));

    buffer = [];
    buffer.push('app.controller(\'UserCtrl\', [\'$scope\', function($scope) {\n    $scope.name = \'total.js is awesome\';\n}]);');
    fs.writeFileSync(path.join(controllers, 'user.js'), buffer.join(EOF));
}

function createFilePublic(directory) {

    var dir = path.join(directory, 'public');
    var css = path.join(dir, 'css');
    var js = path.join(dir, 'js');
    var img = path.join(dir, 'img');

    fs.writeFileSync(path.join(dir, 'favicon.ico'), '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');

    if ($type === 3)
        return;

    if (!fs.existsSync(js))
        fs.mkdirSync(js);

    if (!fs.existsSync(css))
        fs.mkdirSync(css);

    if (!fs.existsSync(img))
        fs.mkdirSync(img);

    var buffer = [];
    buffer.push('User-agent: *');
    buffer.push('Allow: /');
    buffer.push('');

    fs.writeFileSync(path.join(dir, 'robots.txt'), buffer.join(EOF));
    fs.writeFileSync(path.join(css, 'default.css'), 'LyphdXRvKi8NCg0KYm9keSB7IHBhZGRpbmc6MjBweDsgbWFyZ2luOjA7IGZvbnQ6bm9ybWFsIDEycHggQXJpYWw7IGNvbG9yOiM1MDUwNTA7IH0NCg0KLmNvbnRlbnQgeyBtYXJnaW46MCBhdXRvOyB3aWR0aDogOTYwcHg7IHBhZGRpbmc6IDEwcHg7IGJvcmRlci1yYWRpdXM6IDVweDsgYm94LXNoYWRvdzogMCAwIDIwcHggcmdiYSgwLDAsMCwwLjUpOyBhbmltYXRpb246IG15QW5pbWF0aW9uIDVzIGFsdGVybmF0ZTsgfQ0KDQoubGlzdCB7IGJvcmRlci1ib3R0b206MXB4IHNvbGlkICNFMEUwRTA7IHBhZGRpbmctYm90dG9tOjVweDsgbWFyZ2luLWJvdHRvbTo1cHg7IH0NCi5saXN0ID4gZGl2OmZpcnN0LWNoaWxkIHsgZm9udC1zaXplOiAxNXB4OyB9DQoNCkBrZXlmcmFtZXMgbXlBbmltYXRpb24NCnsNCgkwJSAgIHsgYmFja2dyb3VuZDogd2hpdGU7IH0NCgkyNSUgIHsgYmFja2dyb3VuZDogI0YwRjBGMDsgfQ0KCTUwJSAgeyBiYWNrZ3JvdW5kOiAjRDBEMEQwOyB9DQoJMTAwJSB7IGJhY2tncm91bmQ6ICNFMEUwRTA7IH0NCn0=', 'base64');

    buffer = [];
    buffer.push('$(document).ready(function() {');
    buffer.push('');
    buffer.push('});');

    fs.writeFileSync(path.join(js, 'default.js'), buffer.join(EOF));
}

function createFileModules(directory) {
    var dir = path.join(directory, 'modules');
    fs.writeFileSync(path.join(dir, 'example.js'), 'Ly8gSW1wb3J0YW50DQpleHBvcnRzLmlkID0gJ2V4YW1wbGUnOw0KDQovLyBPcHRpb25hbA0KZXhwb3J0cy5pbnN0YWxsID0gZnVuY3Rpb24ob3B0aW9ucykgew0KDQp9Ow0KDQovLyBPcHRpb25hbA0KZXhwb3J0cy51bmluc3RhbGwgPSBmdW5jdGlvbihvcHRpb25zKSB7DQoNCn07DQoNCi8vIE9wdGlvbmFsDQpleHBvcnRzLnVzYWdlID0gZnVuY3Rpb24oKSB7DQogICAgcmV0dXJuIHt9Ow0KfTsNCg0KZXhwb3J0cy55b3VyY29kZSA9IGZ1bmN0aW9uKCkgew0KICAgIHJldHVybiAnSGVsbG8gV29ybGQnOw0KfTs=', 'base64');
}

function createFileControllerAngular(directory) {

    var dir = path.join(directory, 'controllers');
    var buffer = [];

    buffer.push('exports.install = function() {');
    buffer.push('    F.route(\'/*\', view_app);');
    buffer.push('};');
    buffer.push('');
    buffer.push('function view_app() {');
    buffer.push('    var self = this;');
    buffer.push('    self.view(\'app\');');
    buffer.push('}');

    fs.writeFileSync(path.join(dir, 'default.js'), buffer.join(EOF));
}

function createFileController(directory) {

    var dir = path.join(directory, 'controllers');
    var buffer = [];

    buffer.push('exports.install = function() {');
    buffer.push('    F.route(\'/\', view_index);');

    if ($type !== 2) {
        buffer.push('    // or');
        buffer.push('    // F.route(\'/\');');
    }

    buffer.push('};');
    buffer.push('');
    buffer.push('function view_index() {');
    buffer.push('    var self = this;');

    if ($type !== 2)
        buffer.push('    self.view(\'index\');');
    else
        buffer.push('    self.plain(\'index\');');

    buffer.push('}');

    fs.writeFileSync(path.join(dir, 'default.js'), buffer.join(EOF));
}

function createFileTest(directory) {
    var dir = path.join(directory, 'tests');
    var buffer = [];

    buffer.push("exports.priority = 1;");
    buffer.push("exports.disabled = false;");
    buffer.push("");
    buffer.push("exports.run = function() {");
    buffer.push("");
    buffer.push("    F.assert('Number validation', function(next, name) {");
    buffer.push("        assert.ok('1' === '1', name);");
    buffer.push("        next();");
    buffer.push("    });");
    buffer.push("");
    buffer.push("    F.assert('Some controller action', '/some-url-action/', ['xhr', 'json'], function(error, data, code, headers, cookies, name) {");
    buffer.push("        assert.ok(code === 200, name);");
    buffer.push("    }, { name: 'total.js (optional)' }, { cookie: 'value (optional)' }, { 'X-My-Header': 'optional' });");
    buffer.push("");
    buffer.push("};");

    fs.writeFileSync(path.join(dir, 'default.js'), buffer.join(EOF));
}

function install(directory) {
    exec('npm install total.js', { cwd: directory }, function (error, stdout, stderr) {

    }).on('exit', function() {
        console.log('total.js: success');
    });
}

function display_help() {
    console.log('');
    console.log('-m or -minimal             = minimal');
    console.log('-n or -normal              = normal (default)');
    console.log('-a or -angular             = for angular.js application');
    console.log('-t or -translate           = creates a resource file with the localized text from views');
    console.log('-t or -translate "TEXT"    = creates an identificator for the resource');
    console.log('-t or -translate filename  = parsers and creates a resource file from the text file');
    console.log('-c or -translatecsv        = parsers and creates CSV with localization into the current directory');
    console.log('-d or -diff                = creates a differences between two resources "-diff filename1 filename2"');
    console.log('-v or -version             = total.js version');
    console.log('-minify filename           = minifies .js, .css or .html file into filename.min.[extension]');
    console.log('/path/                     = target (default current directory)');
    console.log('');
}

function translateFile(a) {

    if (!fs.existsSync(a))
        return false;

    var arr = fs.readFileSync(a).toString('utf8').split('\n');
    var builder = [];
    var count = 0;

    for (var i = 0, length = arr.length; i < length; i++) {
        var line = arr[i].trim();
        if (line.length === 0)
            continue;
        builder.push('T' + line.hash().padRight(17, ' ') + ': ' + line);
        count++;
    }

    fs.writeFileSync('translate.resource', '// Total.js translation file\n// Created: ' + new Date().format('yyyy-MM-dd HH:mm') + '\n' + builder.join('\n'));
    console.log('total.js: the translation was created (' + count + ' texts)');
    return true;
}

function diff(a, b) {

    if (!fs.existsSync(a)) {
        console.log('The translation file does not exist: ' + a);
        return;
    }

    if (!fs.existsSync(b)) {
        console.log('The translation file does not exist: ' + b);
        return;
    }

    var ba = fs.readFileSync(a).toString('utf8');
    var bb = fs.readFileSync(b).toString('utf8');
    var ca = ba.parseConfig();
    var cb = bb.parseConfig();
    var ka = Object.keys(ca);
    var kb = Object.keys(cb);

    ba = ba.split('\n');
    bb = bb.split('\n');

    var output = '';
    var items = [];
    var add = 0;
    var rem = 0;
    var padding = 0;

    for (var i = 0, length = ba.length; i < length; i++) {
        if (ba[i].indexOf(ka[0]) !== -1) {
            padding = ba[i].indexOf(':');
            break;
        }
    }

    if (padding <= 0)
        padding = 17;

    function find_comment(arr, id) {
        var comment = '';
        for (var i = 0, length = arr.length; i < length; i++) {
            if (arr[i].indexOf(id) !== -1)
                return comment;
            var line = arr[i];
            if (line[0] !== '/' && line[1] !== '/')
                continue;
            comment = line;
        }
        return '';
    }

    var comment = '';
    var prev = '';

    for (var i = 0, length = ka.length; i < length; i++) {
        var key = ka[i];

        if (cb[key] !== undefined)
            continue;

        comment = find_comment(ba, key);

        if (comment) {
            if (items[items.length - 1] !== '')
                items.push('');
            items.push(comment);
        }

        var empty = comment === prev;

        prev = comment;
        items.push(key.padRight(padding) + ': ' + ca[key]);

        if (!empty)
            items.push('');

        add++;
    }

    if (items.length > 0) {
        output += '\n';
        output += 'Add to "' + b + '" these:\n';
        output += '\n';
        output += items.join('\n');
        output += '\n';
    }

    items = [];

    for (var i = 0, length = kb.length; i < length; i++) {
        var key = kb[i];

        if (ca[key] !== undefined)
            continue;

        comment = find_comment(bb, key);

        if (comment) {
            if (items[items.length - 1] !== '')
                items.push('');
            items.push(comment);
        }
        else if (prev !== '')
            items.push('');

        var empty = comment === prev;

        prev = comment;
        items.push(key.padRight(padding) + ': ' + cb[key]);

        if (!empty)
            items.push('');

        rem++;
    }

    if (items.length > 0) {
        output += '\n';
        output += 'Remove from "' + b + '" these:\n';
        output += '\n';
        output += items.join('\n');
        output += '\n';
    }

    var filename = path.join(path.dirname(a), path.basename(a, '.resource') + '-diff.txt');
    fs.writeFileSync(filename, '// Total.js diff file\n// Created: ' + new Date().format('yyyy-MM-dd HH:mm') + '\n' + output);
    console.log('========================================');
    console.log('Translation files differences:');
    console.log('========================================');
    console.log('');
    console.log('added    : ' + add);
    console.log('removed  : ' + rem);
    console.log('output   : ' + filename);
    console.log('');
}

function main() {

    var dir = process.cwd();
    for (var i = 2; i < process.argv.length; i++) {
        var arg = process.argv[i];
        var cmd = arg.toLowerCase();

        if (cmd.substring(0, 2) === '--')
            cmd = cmd.substring(1);

        if (cmd === '-v' || cmd === '-version') {
            console.log(require('total.js').version);
            return;
        }

        if (cmd === '-t' || cmd === '-translate') {
            $type = 4;
            continue
        }

        if (cmd === '-translate-csv' || cmd === '-translatecsv' || cmd === '-c') {
            $type = 6;
            continue
        }

        if (cmd === '-minify' || cmd === '-compress' || cmd === '-compile') {
            $type = 5;
            continue
        }

        if (cmd === '-diff') {
            diff(process.argv[i + 1] || '', process.argv[i + 2] || '');
            return;
        }

        if (cmd === '-a' || cmd === '-angular' || cmd === 'angular') {
            $type = 3;
            continue;
        }

        if (cmd === '-m' || cmd === '-minimal' || cmd === '-minimum' || cmd === 'minimum') {
            $type = 2;
            continue;
        }

        if (cmd === '-n' || cmd === '-normal' || cmd === 'normal') {
            $type = 1;
            continue;
        }

        if (cmd === '-h' || cmd === '-help' || cmd === '--help' || cmd === 'help') {
            display_help();
            return;
        }

        dir = arg;
        isDirectory = true;
        break;
    }

    if ($type === 5) {

        if (!fs.existsSync(dir)) {
            console.log('total.js: error / file not found');
            return;
        }

        var content = fs.readFileSync(dir).toString('utf8');
        var extension = path.extname(dir);
        var filename = dir.replace(extension, '.min' + extension);

        switch (extension.toLowerCase()) {
            case '.html':
                fs.writeFileSync(filename, Utils.minifyHTML(content));
                break;
            case '.js':
                fs.writeFileSync(filename, Utils.minifyScript(content));
                break;
            case '.css':
                fs.writeFileSync(filename, Utils.minifyStyle(content));
                break;
        }

        console.log('Minified: ' + filename);
        return;
    }

    if ($type !== 4) {
        if (!fs.existsSync(dir)) {
            console.log('total.js: error / directory not exists');
            return;
        }
    }

    if ($type === 4) {

        if (isDirectory) {
            if (translateFile(dir))
                return;
            console.log('T' + dir.hash().padRight(17, ' ') + ': ' + dir);
            return;
        }

        console.log('total.js: creating translation');
        Utils.ls(dir, function(files) {

            var resource = {};
            var texts = {};
            var max = 0;
            var count = 0;

            for (var i = 0, length = files.length; i < length; i++) {
                var filename = files[i];

                if (filename.indexOf('sitemap') === -1 && !filename.endsWith('.html'))
                    continue;

                var content = fs.readFileSync(filename).toString('utf8');
                var command = Internal.findLocalization(content, 0);
                while (command !== null) {

                    // Skip for direct reading
                    if (command.command[0] === '#' && command.command[1] !== ' ') {
                        command = Internal.findLocalization(content, command.end);
                        continue;
                    }

                    var key = 'T' + command.command.hash();
                    var file = filename.substring(dir.length + 1);

                    texts[key] = command.command;

                    if (resource[key]) {
                        if (resource[key].indexOf(file) === -1)
                            resource[key] += ', ' + file;
                    }
                    else
                        resource[key] = file;

                    count++;
                    max = Math.max(max, key.length);
                    command = Internal.findLocalization(content, command.end);
                }
            }

            var keys = Object.keys(resource);
            var builder = [];
            var output = {};

            for (var i = 0, length = keys.length; i < length; i++) {
                if (!output[resource[keys[i]]])
                    output[resource[keys[i]]] = [];
                output[resource[keys[i]]].push(keys[i].padRight(max + 5, ' ') + ': ' + texts[keys[i]]);
            }

            keys = Object.keys(output);
            for (var i = 0, length = keys.length; i < length; i++)
                builder.push('\n// ' + keys[i] + '\n' + output[keys[i]].join('\n'));

            fs.writeFileSync('translate.resource', '// Total.js translation file\n// Created: ' + new Date().format('yyyy-MM-dd HH:mm') + '\n' + builder.join('\n'));
            console.log('total.js: the translation was created (' + count + ' texts)');
        });
        return;
    }

    if ($type === 6) {
        console.log('total.js: creating translation to CSV');
        Utils.ls(dir, function(files) {

            var resource = {};
            var texts = {};
            var count = 0;
            var output = ['Hash;Text;Translation'];

            for (var i = 0, length = files.length; i < length; i++) {
                var filename = files[i];

                if (!filename.endsWith('.html'))
                    continue;

                var content = fs.readFileSync(filename).toString('utf8');
                var command = Internal.findLocalization(content, 0);
                while (command !== null) {

                    // Skip for direct reading
                    if (command.command[0] === '#' && command.command[1] !== ' ') {
                        command = Internal.findLocalization(content, command.end);
                        continue;
                    }

                    var key = 'T' + command.command.hash();
                    var file = filename.substring(dir.length + 1);

                    texts[key] = command.command.repla;

                    if (!resource[key]) {
                        output.push(key + ';"' + command.command.replace(/\"/g, '""') + '";');
                        resource[key] = true;
                        count++;
                    }

                    command = Internal.findLocalization(content, command.end);
                }
            }

            fs.writeFileSync('translate.csv', output.join('\n'));
            console.log('total.js: the translation was created (' + count + ' texts)');
        });
        return;
    }

    var files = fs.readdirSync(dir);
    if (files.length > 0) {

        var can = true;
        for (var i = 0; i < files.length; i++) {
            var name = files[i];
            if (name[0] === '.')
                continue;
            can = false;
        }

        if (!can) {
            console.log('total.js: error / directory is not empty');
            return;
        }
    }

    console.log('total.js: creating directories');

    if ($type !== 3)
        createDirectory(dir);
    else
        createDirectoryAngular(dir);

    console.log('total.js: creating files');
    createFiles(dir);

    console.log('total.js: installing the latest version');
    install(dir);
}

main();