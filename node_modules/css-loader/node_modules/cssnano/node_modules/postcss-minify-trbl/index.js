'use strict';

var postcss = require('postcss');
var space = postcss.list.space;

var props = [
    'margin',
    'padding',
    'border-color',
    'border-width',
    'border-style'
];

function convert (v) {
    var s = space(v);
    var value = [
        s[0],                // top
        s[1] || s[0],        // right
        s[2] || s[0],        // bottom
        s[3] || s[1] || s[0] // left
    ];
    if (value[3] === value[1]) {
        value.pop();
        if (value[2] === value[0]) {
            value.pop();
            if (value[0] === value[1]) {
                value.pop();
            }
        }
    }
    return value.join(' ');
}

function optimise (decl) {
    if (!~props.indexOf(decl.prop)) {
        return;
    }
    return decl.value = convert(decl.value);
}

module.exports = postcss.plugin('postcss-minify-trbl', function () {
    return function (css) {
        css.eachDecl(optimise);
    };
});
